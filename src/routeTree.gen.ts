/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthorizedImport } from './routes/unauthorized'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as ShoppingListsImport } from './routes/shopping-lists'
import { Route as ProfileImport } from './routes/profile'
import { Route as AddRecipeImport } from './routes/add-recipe'
import { Route as IndexImport } from './routes/index'
import { Route as ShoppingListsListIdImport } from './routes/shopping-lists.$listId'
import { Route as ShareTokenImport } from './routes/share.$token'
import { Route as RecipeRecipeIdImport } from './routes/recipe.$recipeId'
import { Route as RecipeRecipeIdPrintImport } from './routes/recipe.$recipeId.print'
import { Route as RecipeRecipeIdCookImport } from './routes/recipe.$recipeId.cook'

// Create/Update Routes

const UnauthorizedRoute = UnauthorizedImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ShoppingListsRoute = ShoppingListsImport.update({
  id: '/shopping-lists',
  path: '/shopping-lists',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AddRecipeRoute = AddRecipeImport.update({
  id: '/add-recipe',
  path: '/add-recipe',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShoppingListsListIdRoute = ShoppingListsListIdImport.update({
  id: '/$listId',
  path: '/$listId',
  getParentRoute: () => ShoppingListsRoute,
} as any)

const ShareTokenRoute = ShareTokenImport.update({
  id: '/share/$token',
  path: '/share/$token',
  getParentRoute: () => rootRoute,
} as any)

const RecipeRecipeIdRoute = RecipeRecipeIdImport.update({
  id: '/recipe/$recipeId',
  path: '/recipe/$recipeId',
  getParentRoute: () => rootRoute,
} as any)

const RecipeRecipeIdPrintRoute = RecipeRecipeIdPrintImport.update({
  id: '/print',
  path: '/print',
  getParentRoute: () => RecipeRecipeIdRoute,
} as any)

const RecipeRecipeIdCookRoute = RecipeRecipeIdCookImport.update({
  id: '/cook',
  path: '/cook',
  getParentRoute: () => RecipeRecipeIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-recipe': {
      id: '/add-recipe'
      path: '/add-recipe'
      fullPath: '/add-recipe'
      preLoaderRoute: typeof AddRecipeImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/shopping-lists': {
      id: '/shopping-lists'
      path: '/shopping-lists'
      fullPath: '/shopping-lists'
      preLoaderRoute: typeof ShoppingListsImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/recipe/$recipeId': {
      id: '/recipe/$recipeId'
      path: '/recipe/$recipeId'
      fullPath: '/recipe/$recipeId'
      preLoaderRoute: typeof RecipeRecipeIdImport
      parentRoute: typeof rootRoute
    }
    '/share/$token': {
      id: '/share/$token'
      path: '/share/$token'
      fullPath: '/share/$token'
      preLoaderRoute: typeof ShareTokenImport
      parentRoute: typeof rootRoute
    }
    '/shopping-lists/$listId': {
      id: '/shopping-lists/$listId'
      path: '/$listId'
      fullPath: '/shopping-lists/$listId'
      preLoaderRoute: typeof ShoppingListsListIdImport
      parentRoute: typeof ShoppingListsImport
    }
    '/recipe/$recipeId/cook': {
      id: '/recipe/$recipeId/cook'
      path: '/cook'
      fullPath: '/recipe/$recipeId/cook'
      preLoaderRoute: typeof RecipeRecipeIdCookImport
      parentRoute: typeof RecipeRecipeIdImport
    }
    '/recipe/$recipeId/print': {
      id: '/recipe/$recipeId/print'
      path: '/print'
      fullPath: '/recipe/$recipeId/print'
      preLoaderRoute: typeof RecipeRecipeIdPrintImport
      parentRoute: typeof RecipeRecipeIdImport
    }
  }
}

// Create and export the route tree

interface ShoppingListsRouteChildren {
  ShoppingListsListIdRoute: typeof ShoppingListsListIdRoute
}

const ShoppingListsRouteChildren: ShoppingListsRouteChildren = {
  ShoppingListsListIdRoute: ShoppingListsListIdRoute,
}

const ShoppingListsRouteWithChildren = ShoppingListsRoute._addFileChildren(
  ShoppingListsRouteChildren,
)

interface RecipeRecipeIdRouteChildren {
  RecipeRecipeIdCookRoute: typeof RecipeRecipeIdCookRoute
  RecipeRecipeIdPrintRoute: typeof RecipeRecipeIdPrintRoute
}

const RecipeRecipeIdRouteChildren: RecipeRecipeIdRouteChildren = {
  RecipeRecipeIdCookRoute: RecipeRecipeIdCookRoute,
  RecipeRecipeIdPrintRoute: RecipeRecipeIdPrintRoute,
}

const RecipeRecipeIdRouteWithChildren = RecipeRecipeIdRoute._addFileChildren(
  RecipeRecipeIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeRoute
  '/profile': typeof ProfileRoute
  '/shopping-lists': typeof ShoppingListsRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/recipe/$recipeId': typeof RecipeRecipeIdRouteWithChildren
  '/share/$token': typeof ShareTokenRoute
  '/shopping-lists/$listId': typeof ShoppingListsListIdRoute
  '/recipe/$recipeId/cook': typeof RecipeRecipeIdCookRoute
  '/recipe/$recipeId/print': typeof RecipeRecipeIdPrintRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeRoute
  '/profile': typeof ProfileRoute
  '/shopping-lists': typeof ShoppingListsRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/recipe/$recipeId': typeof RecipeRecipeIdRouteWithChildren
  '/share/$token': typeof ShareTokenRoute
  '/shopping-lists/$listId': typeof ShoppingListsListIdRoute
  '/recipe/$recipeId/cook': typeof RecipeRecipeIdCookRoute
  '/recipe/$recipeId/print': typeof RecipeRecipeIdPrintRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-recipe': typeof AddRecipeRoute
  '/profile': typeof ProfileRoute
  '/shopping-lists': typeof ShoppingListsRouteWithChildren
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/recipe/$recipeId': typeof RecipeRecipeIdRouteWithChildren
  '/share/$token': typeof ShareTokenRoute
  '/shopping-lists/$listId': typeof ShoppingListsListIdRoute
  '/recipe/$recipeId/cook': typeof RecipeRecipeIdCookRoute
  '/recipe/$recipeId/print': typeof RecipeRecipeIdPrintRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-recipe'
    | '/profile'
    | '/shopping-lists'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/recipe/$recipeId'
    | '/share/$token'
    | '/shopping-lists/$listId'
    | '/recipe/$recipeId/cook'
    | '/recipe/$recipeId/print'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-recipe'
    | '/profile'
    | '/shopping-lists'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/recipe/$recipeId'
    | '/share/$token'
    | '/shopping-lists/$listId'
    | '/recipe/$recipeId/cook'
    | '/recipe/$recipeId/print'
  id:
    | '__root__'
    | '/'
    | '/add-recipe'
    | '/profile'
    | '/shopping-lists'
    | '/signin'
    | '/signup'
    | '/unauthorized'
    | '/recipe/$recipeId'
    | '/share/$token'
    | '/shopping-lists/$listId'
    | '/recipe/$recipeId/cook'
    | '/recipe/$recipeId/print'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddRecipeRoute: typeof AddRecipeRoute
  ProfileRoute: typeof ProfileRoute
  ShoppingListsRoute: typeof ShoppingListsRouteWithChildren
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
  RecipeRecipeIdRoute: typeof RecipeRecipeIdRouteWithChildren
  ShareTokenRoute: typeof ShareTokenRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddRecipeRoute: AddRecipeRoute,
  ProfileRoute: ProfileRoute,
  ShoppingListsRoute: ShoppingListsRouteWithChildren,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  UnauthorizedRoute: UnauthorizedRoute,
  RecipeRecipeIdRoute: RecipeRecipeIdRouteWithChildren,
  ShareTokenRoute: ShareTokenRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add-recipe",
        "/profile",
        "/shopping-lists",
        "/signin",
        "/signup",
        "/unauthorized",
        "/recipe/$recipeId",
        "/share/$token"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/add-recipe": {
      "filePath": "add-recipe.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/shopping-lists": {
      "filePath": "shopping-lists.tsx",
      "children": [
        "/shopping-lists/$listId"
      ]
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/unauthorized": {
      "filePath": "unauthorized.tsx"
    },
    "/recipe/$recipeId": {
      "filePath": "recipe.$recipeId.tsx",
      "children": [
        "/recipe/$recipeId/cook",
        "/recipe/$recipeId/print"
      ]
    },
    "/share/$token": {
      "filePath": "share.$token.tsx"
    },
    "/shopping-lists/$listId": {
      "filePath": "shopping-lists.$listId.tsx",
      "parent": "/shopping-lists"
    },
    "/recipe/$recipeId/cook": {
      "filePath": "recipe.$recipeId.cook.tsx",
      "parent": "/recipe/$recipeId"
    },
    "/recipe/$recipeId/print": {
      "filePath": "recipe.$recipeId.print.tsx",
      "parent": "/recipe/$recipeId"
    }
  }
}
ROUTE_MANIFEST_END */
